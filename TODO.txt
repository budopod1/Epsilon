TODO:
* `Matrix` type?
* `Map` type
* serialization and complete compilation of `given`s
* serialization and complete compilation of `Poly` types_
* add way to apply operation to every element of array (like Linq Select)
* add option for string constants to be statically allocated
* top tracking so we can alloca instead of malloc
* self host LLVMIR section?
* struct bound methods: stringify, compare (maybe), (called on) free, is truthy, casting (maybe)
* add `.so` compilation target
* add `.o` compilation target
* add `Struct` type that's treated as a superclass of all structs
* add ability to import C methods and structs without having to write an EPSLSPEC
* remove usage of bools as function parameters with no context (ack '(?<!while |if |\w{0,99}[Bb]ool\w{0,99})\(([Tt]rue|[Ff]alse)(,|\))|, ([Tt]rue|[Ff]alse)(,|\))') in Python code
* each individual ClangConfig should be able to supply multiple arguments
* reenable clang config
* move enum-related methods to EnumHelpers class
* remove trailing whitespace
* split IntermediateFile.IntermediateType.IR into IntermediateFile.IntermediateType.LL and IntermediateFile.IntermediateType.BC? the first of which is assumed to not be optimized already, the second of which is
